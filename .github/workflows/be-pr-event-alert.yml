name: BE/PM - PR Review 슬랙 알림

on:
  pull_request:
    types: [review_requested]
    branches:
      - main
      - 'be/**'

  pull_request_review:
    types: [submitted]
    branches:
      - main
      - 'be/**'

env:
  Dobby-Kim: "U07BJABU6G1"
  U07BJABU6G1: "BE팀 도비"
  Chocochip101: "U07BUEJDS8G"
  U07BUEJDS8G: "BE팀 초코칩"
  xogns1514: "U07AZ26UC2J"
  U07AZ26UC2J: "BE팀 러쉬"
  cutehumanS2: "U07B88ZQDU4"
  U07B88ZQDU4: "BE팀 냥인"
  HyungHoKim00: "U07B5HBKZM1"
  U07B5HBKZM1: "BE팀 명오"

jobs:
  review-requested_requested:
    if: github.event.action == 'review_requested'
    runs-on: ubuntu-latest
    steps:
      - name: Set reviewer and sender variables
        id: set-vars
        run: |
          echo "REVIEWER_SLACK_ID=${{ env[github.event.requested_reviewer.login] }}" >> $GITHUB_ENV
          echo "SENDER_SLACK_ID=${{ env[github.event.sender.login] }}" >> $GITHUB_ENV

      - name: pr reviewe 요청 시 slack 알림 보내기
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.REVIEW_MENTION_CHANNEL_ID }}
          payload: |
            {
              "text": "✨PR 리뷰 요청✨",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": " 〰️〰️〰️〰️〰️〰️〰️〰️〰️ \n✨✨✨✨✨ \n✨리뷰 요청✨ \n✨✨✨✨✨\n <@${{ env.SENDER_SLACK_ID }}> ➡️ <@${{ env.REVIEWER_SLACK_ID }}> \n\n 💡${{ github.event.pull_request.title }}💡에 대한 리뷰 요청 도착! \n 아래의 링크에서 확인주세요 \n \n ⚡️ <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }} - 바로가기>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
  review-submitted_alert:
    if: github.event.action == 'submitted' && github.event.review.state != 'APPROVED' 
    runs-on: ubuntu-latest
    steps:
      - name: Set reviewer and reviewee variables
        id: set-vars
        run: |
          echo "REVIEWER_SLACK_ID=${{ env[github.event.sender.login] }}" >> $GITHUB_ENV
          echo "ASSIGNEE_SLACK_ID=${{ env[github.event.pull_request.login] }}" >> $GITHUB_ENV

      - name: pr 리뷰 완료 후 submit되면 reviewee에게 slack 알림 발송
        if: env.ASSIGNEE_SLACK_ID != ''
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.REVIEW_MENTION_CHANNEL_ID }}
          payload: |
            {
              "text": "🔥${{ github.event.pull_request.title }}: 리뷰 도착🔥",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": " 〰️〰️〰️〰️〰️〰️〰️〰️〰️ \n🔥🔥🔥🔥🔥\n🔥리뷰 완료🔥\n🔥🔥🔥🔥🔥 \n <@${{ env.REVIEWER_SLACK_ID }}> ➡️ <@${{ env.ASSIGNEE_SLACK_ID }}> \n 💡${{ github.event.pull_request.title }}💡에 대한 리뷰 도착! \n ✨ 아래의 링크에서 확인해주세요 :muscle::muscle: \n \n ⚡️ <${{ github.event.pull_request.html_url }}|${{ github.event.pull_request.title }} - 바로가기>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          
  pr-approved_alert:
    if: github.event.review.state == 'APPROVED'
    runs-on: ubuntu-latest
    steps:
      - name: Set assignee variables
        id: set-vars
        run: |
          echo "ASSIGNEE_SLACK_ID=${{ env[github.event.pull_request.assignee.login] }}" >> $GITHUB_ENV

      - name: pr reviewer가 Approve 하면 slack 알림 보냄
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: ${{ secrets.TASK_COMPLETE_SLACK_CHANNEL_ID }}
          payload: |
            {
              "text": "🏁 ${{ github.event.pull_request.title }}: Approve 알림🏁",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": " 〰️〰️〰️〰️〰️〰️〰️〰️〰️ \n🏁🏁🏁🏁\n🏁PR승인🏁 \n🏁🏁🏁🏁\n <@${{ env.ASSIGNEE_SLACK_ID }}> 님! \n 🚀 작업하신 **${{ github.event.pull_request.title }}** 가 Approve 됐어요! \n :muscle: 아래의 링크에서 Merge를 진행해주세요 \n \n ⚡️ <${{ github.event.pull_request.html_url }}|PR 바로가기 링크>"
                  }
                }
              ]
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
