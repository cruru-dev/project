name: Deploy to Docker

on:
  workflow_dispatch:
  push:
    branches: be/main

jobs:
  build:
    environment: dev
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3
      with:
          cache-write-only: true

    - name: Build with Gradle
      run: ./gradlew bootJar

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Image build and push
      run: |
        docker build --build-arg PROFILE=dev --build-arg DEPENDENCY=build/dependency -t ${{ secrets.DOCKER_USERNAME }}/cruru:dev-latest --platform linux/arm64 .
        docker push ${{ secrets.DOCKER_USERNAME }}/cruru:dev-latest

    - name: Extract secrets to .env file
      run: |
        echo DB_PORT=${{ secrets.DB_PORT }} >> ${{ github.workspace }}/backend/.env
        echo DB_IP_ADDRESS=${{ secrets.DB_IP_ADDRESS }} >> ${{ github.workspace }}/backend/.env
        
        echo SERVER_BINDING_PORT=${{ secrets.SERVER_BINDING_PORT }} >> ${{ github.workspace }}/backend/.env
        echo SERVER_PORT=${{ secrets.SERVER_PORT }} >> ${{ github.workspace }}/backend/.env
        
        echo DB_URL=${{ secrets.DB_URL }} >> ${{ github.workspace }}/backend/.env
        echo DB_USER=${{ secrets.DB_USER }} >> ${{ github.workspace }}/backend/.env
        echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> ${{ github.workspace }}/backend/.env
        echo DDL_AUTO=${{ secrets.DDL_AUTO }} >> ${{ github.workspace }}/backend/.env
        echo APP_IP_ADDRESS=${{ secrets.APP_IP_ADDRESS }} >> ${{ github.workspace }}/backend/.env

        echo SUBNET=${{ secrets.SUBNET }} >> ${{ github.workspace }}/backend/.env

    - name: Upload .env file
      uses: actions/upload-artifact@v4
      with:
        name: env-file
        path: backend/.env


    - name: Upload docker-compose
      uses: actions/upload-artifact@v4
      with:
        name: docker-compose
        path: ${{ github.workspace }}/backend/docker-compose.dev.yml

  deploy:
    runs-on: [self-hosted, Linux, be-dev]
    needs: build
    defaults:
      run:
        working-directory: backend
    steps:
    - name: Download docker-compose.dev.yml
      uses: actions/download-artifact@v4
      with:
        name: docker-compose
        path: ${{ github.workspace }}/backend

    - name: Download .env file
      uses: actions/download-artifact@v4
      with:
        name: env-file
        path: ${{ github.workspace }}/backend

    - name: Stop and remove existing containers
      run: |
        sudo docker-compose -f docker-compose.dev.yml down --rmi all

    - name: Deploy
      run: |
        sudo docker-compose --env-file .env -f docker-compose.dev.yml up -d
